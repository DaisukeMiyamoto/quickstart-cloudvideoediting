{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template deploys the Cloud Video Editing Quick Start. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
        "ADInstanceType": {
            "Description": "Amazon EC2 instance type for the first Active Directory Instance",
            "Type": "String",
            "Default": "m4.xlarge",
            "AllowedValues": [
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "AD2InstanceType": {
            "Description": "Amazon EC2 instance type for the second Active Directory Instance",
            "Type": "String",
            "Default": "m4.xlarge",
            "AllowedValues": [
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "ADServerNetBIOSName1": {
            "Description": "NetBIOS name of the 1st AD Server (upto 15 characters)",
            "Type": "String",
            "Default": "DC1",
            "MinLength": "1",
            "MaxLength": "15",
            "AllowedPattern": "[a-zA-Z0-9]+"
        },
        "ADServerNetBIOSName2": {
            "Description": "NetBIOS name of the 2nd AD Server (upto 15 characters)",
            "Type": "String",
            "Default": "DC2",
            "MinLength": "1",
            "MaxLength": "15",
            "AllowedPattern": "[a-zA-Z0-9]+"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "DomainAdminPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DomainAdminUser": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "StackAdmin",
            "Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "DomainDNSName": {
            "AllowedPattern": "[a-zA-Z0-9]+\\..+",
            "Default": "example.com",
            "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. example.com",
            "MaxLength": "25",
            "MinLength": "3",
            "Type": "String"
        },
        "DomainNetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "example",
            "Description": "NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "DMZ1CIDR": {
            "Description": "CIDR Block for the Public DMZ Subnet located in AZ1",
            "Type": "String",
            "Default": "10.0.32.0/20",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "DMZ2CIDR": {
            "Description": "CIDR Block for the Public DMZ Subnet located in AZ2",
            "Type": "String",
            "Default": "10.0.96.0/20",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "InstanceType": {
            "Type": "String",
            "Description": "Which GPU instance type are we using?",
            "Default": "g2.8xlarge"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NATInstanceType": {
            "Description": "Amazon EC2 instance type for the NAT Instances",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t2.small",
                "t2.medium"
            ]
        },
        "PrivSub1CIDR": {
            "Description": "CIDR block for the AD Server tier located in AZ1.",
            "Type": "String",
            "Default": "10.0.0.0/19",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub2CIDR": {
            "Description": "CIDR block for the AD Server tier located in AZ2.",
            "Type": "String",
            "Default": "10.0.64.0/19",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.128.0/20",
            "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.144.0/20",
            "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },

        "QSS3BucketName": {
            "Type": "String",
            "Default": "mark-teradici-share"
        },
        "QSS3KeyPrefix": {
            "Type": "String",
            "Default": "edit-quickstart"
        },
        "RestoreModePassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for a separate Administrator account when the domain controller is in Restore Mode. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "True",
            "Type": "String"
        },
        "RDGWInstanceType": {
            "Description": "Amazon EC2 instance type for the Remote Desktop Gatweway Instance",
            "Type": "String",
            "Default": "m4.xlarge",
            "AllowedValues": [
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "StackTimeout": {
            "Type": "String",
            "Description": "Amount of time we wait before failing the stack",
            "Default": "PT45M"
        },
        "UserCount": {
            "Description": "Total number of test user accounts to create in Active Directory",
            "Type": "Number",
            "Default": "25"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        }
    },
    "Mappings": {

        "Region2Principal" : {
            "us-east-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "us-west-2"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "us-west-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "eu-west-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "eu-west-2"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "ap-southeast-1" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "ap-northeast-1" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "ap-northeast-2" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "ap-southeast-2" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "ap-south-1"     : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "us-east-2"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "ca-central-1"   : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "sa-east-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
            "cn-north-1"     : { "EC2Principal" : "ec2.amazonaws.com.cn", "OpsWorksPrincipal" : "opsworks.amazonaws.com.cn" },
            "eu-central-1"   : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" }
        },

        "Region2ARNPrefix": {
            "us-east-1"      : { "ARNPrefix": "arn:aws:" },
            "us-west-1"      : { "ARNPrefix": "arn:aws:" },
            "us-west-2"      : { "ARNPrefix": "arn:aws:" },
            "eu-west-1"      : { "ARNPrefix": "arn:aws:" },
            "eu-west-2"      : { "ARNPrefix": "arn:aws:" },
            "ap-northeast-1" : { "ARNPrefix": "arn:aws:" },
            "ap-northeast-2" : { "ARNPrefix": "arn:aws:" },
            "ap-southeast-1" : { "ARNPrefix": "arn:aws:" },
            "ap-southeast-2" : { "ARNPrefix": "arn:aws:" },
            "ap-south-1"     : { "ARNPrefix": "arn:aws:" },
            "us-east-2"      : { "ARNPrefix": "arn:aws:" },
            "ca-central-1"   : { "ARNPrefix": "arn:aws:" },
            "sa-east-1"      : { "ARNPrefix": "arn:aws:" },
            "cn-north-1"     : { "ARNPrefix": "arn:aws-cn:" },
            "eu-central-1"   : { "ARNPrefix": "arn:aws:" }
        },

        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-gov-west-1": {
                "Partition": "aws-us-gov",
                "QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        },
        "Windows2008R2AMIMap": {
            "us-east-1": { "winami": "ami-6a49477d" },
            "us-east-2": { "winami": "xx no gpus xx" },
            "us-west-1": { "winami": "ami-fb2a789b" },
            "us-west-2": { "winami": "ami-6b9f200b" },
            "eu-west-1": { "winami": "ami-36a9f450" },
            "eu-central-1": { "winami": "ami-c4e629ab" },
            "sa-east-1": { "winami": "" },
            "ap-southeast-1": { "winami": "" },
            "ap-southeast-2": { "winami": "" },
            "ap-northeast-1": { "winami": "" }
        },
        "Windows2016AMIMap": {
            "us-east-1": { "winami": "ami-ef7cf4f9" },
            "us-east-2": { "winami": "xx no gpus xx" },
            "us-west-1": { "winami": "ami-179ac977" },
            "us-west-2": { "winami": "ami-6e833e0e" },
            "eu-west-1": { "winami": "ami-29f7dd5a" },
            "eu-central-1": { "winami": "ami-88ec20e7" },
            "sa-east-1": { "winami": "" },
            "ap-southeast-1": { "winami": "" },
            "ap-southeast-2": { "winami": "" },
            "ap-northeast-1": { "winami": "" }
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "submodules/quickstart-aws-vpc",
                            "templates/aws-vpc.template"
                        ]
                    ]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": "2",
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivSub1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivSub2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "ADStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3.amazonaws.com/quickstart-reference/microsoft/activedirectory/latest/templates/Template_1_AD_2012.template",
                "Parameters": {
                    "AD2InstanceType": {
                        "Ref": "AD2InstanceType"
                    },
                    "ADInstanceType": {
                        "Ref": "ADInstanceType"
                    },
                    "ADServerNetBIOSName1": {
                        "Ref": "ADServerNetBIOSName1"
                    },
                    "ADServerNetBIOSName2": {
                        "Ref": "ADServerNetBIOSName2"
                    },
                    "DMZ1CIDR": {
                        "Ref": "DMZ1CIDR"
                    },
                    "DMZ2CIDR": {
                        "Ref": "DMZ2CIDR"
                    },
                    "DomainAdminPassword": {
                        "Ref": "DomainAdminPassword"
                    },
                    "DomainAdminUser": {
                        "Ref": "DomainAdminUser"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "DomainNetBIOSName": {
                        "Ref": "DomainNetBIOSName"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NATInstanceType": {
                        "Ref": "NATInstanceType"
                    },
                    "PrivSub1CIDR": {
                        "Ref": "PrivSub1CIDR"
                    },
                    "PrivSub2CIDR": {
                        "Ref": "PrivSub2CIDR"
                    },
                    "RDGWInstanceType": {
                        "Ref": "RDGWInstanceType"
                    },
                    "RestoreModePassword": {
                        "Ref": "RestoreModePassword"
                    },
                    "UserCount": {
                        "Ref": "UserCount"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "IamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version" : "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [ "ec2.amazonaws.com" ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                    } ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "AwsServiceAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:GetObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Resource": [ "arn:aws:s3:::premiere-poc/*" ]
                                },
                                {
                                    "Sid": "Stmt1463078504000",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:DescribeLogGroups",
                                        "logs:DescribeLogStreams",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [ "*" ]
                                }
                            ]
                        }
                    }

                ]
            }
        },
        "IAMInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ { "Ref": "IamRole" } ]
            }
        },
        "MyInstance": {
            "DependsOn": "VPCStack",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "BlockDeviceMappings" : [
                    {
                        "DeviceName" : "/dev/sda1",
                        "Ebs" : { "VolumeSize" : "60" }
                    }
                ],
                "InstanceType": {"Ref": "InstanceType"},
                "IamInstanceProfile": {"Ref": "IAMInstanceProfile"},
                "ImageId": { "Fn::FindInMap" : [ "Windows2016AMIMap", { "Ref" : "AWS::Region" }, "winami" ]},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "edit-host-1"
                    }
                ],
                "NetworkInterfaces" : [{
                    "AssociatePublicIpAddress" : "true",
                    "GroupSet"                 : [{ "Ref" : "EditHostSecurityGroup" }],
                    "DeviceIndex"              : "0",
                    "SubnetId"                 : { "Fn::GetAtt": [ "VPCStack",
                        "Outputs.PublicSubnet1ID"
                    ] }
                }],
                "KeyName": { "Ref": "KeyPairName" },
                "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                    "<script>\n",
                    "cfn-init.exe -v -c config -s ", { "Ref" : "AWS::StackName" },
                    " -r MyInstance",
                    " --region ", { "Ref" : "AWS::Region" }, "\n",
                    "</script>\n"
                ]]}}
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": { "Ref": "StackTimeout" }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "config-video-editor"
                        ]
                    },
                    "setup": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.MyInstance.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -c config -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r MyInstance",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-init-quickstart-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSQuickStartResourceSignal -Stack '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "' -Resource 'MyInstance' -Region '",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "config-video-editor" : {
                        "files": {
                            "c:\\Users\\Administrator\\Downloads\\install-video-editor.ps1": {
                                "source": {
                                    "Fn::Join" :  [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/install-video-editor.ps1"
                                        ]
                                    ] }
                            },
                            "c:\\Users\\Administrator\\Downloads\\install-teradici.ps1": {
                                "source": {
                                    "Fn::Join" :  [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/install-teradici.ps1"
                                        ]
                                    ] }
                            },
                            "c:\\Users\\Administrator\\Downloads\\install-gpu-drivers.ps1": {
                                "source": {
                                    "Fn::Join" :  [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/install-gpu-drivers.ps1"
                                        ]
                                    ] }
                            },
                            "c:\\Users\\Administrator\\Downloads\\show-reboots.ps1": {
                                "source": {
                                    "Fn::Join" :  [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/show-reboots.ps1"
                                        ]
                                    ] }
                            },
                            "c:\\Users\\Administrator\\Downloads\\install-packages.ps1": {
                                "source": {
                                    "Fn::Join" :  [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/install-packages.ps1"
                                        ]
                                    ] }
                            }
                        },
                        "commands": {
                            "01-install-packages": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy Unrestricted C:\\Users\\Administrator\\Downloads\\install-packages.ps1 -verbose"
                                        ]
                                    ]
                                }
                            },
                            "01-install-video-editor": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy Unrestricted C:\\Users\\Administrator\\Downloads\\install-video-editor.ps1 -verbose"
                                        ]
                                    ]
                                }
                            },
                            "02-install-gpu-drivers": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy Unrestricted C:\\Users\\Administrator\\Downloads\\install-gpu-drivers.ps1 -verbose"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "03-install-teradici": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy Unrestricted C:\\Users\\Administrator\\Downloads\\install-teradici.ps1 ",
                                            "-stack \"", { "Ref": "AWS::StackName" }, "\" -resource \"MyInstance\" -verbose"
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "EditHostSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "ssh and web",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "4172",
                        "ToPort": "4172",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "4172",
                        "ToPort": "4172",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": { "Fn::GetAtt": [ "VPCStack", "Outputs.VPCID" ] }
            }
        }
    }
}
